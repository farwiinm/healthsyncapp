name: CI/CD Pipeline for Microservices

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-2
  ECR_AGGREGATOR: ${{ secrets.ECR_REPOSITORY_URI_AGGREGATOR }}
  ECR_APPOINTMENT: ${{ secrets.ECR_REPOSITORY_URI_APPOINTMENT }}
  ECR_NOTIFICATION: ${{ secrets.ECR_REPOSITORY_URI_NOTIFICATION }}
  ECR_PATIENT: ${{ secrets.ECR_REPOSITORY_URI_PATIENT }}

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: $AWS_REGION

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Aggregator CronJob
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY_URI_AGGREGATOR }}:latest ./microservices/aggregator-service
          docker push ${{ secrets.ECR_REPOSITORY_URI_AGGREGATOR }}:latest

      - name: Build and Push Appointment Microservice
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY_URI_APPOINTMENT }}:latest ./microservices/appointment-scheduling-service
          docker push ${{ secrets.ECR_REPOSITORY_URI_APPOINTMENT }}:latest

      - name: Build and Push Notification Microservice
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY_URI_NOTIFICATION }}:latest ./microservices/notification-service
          docker push ${{ secrets.ECR_REPOSITORY_URI_NOTIFICATION }}:latest

      - name: Build and Push Patient Microservice
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY_URI_PATIENT }}:latest ./microservices/patient-record-service
          docker push ${{ secrets.ECR_REPOSITORY_URI_PATIENT }}:latest
